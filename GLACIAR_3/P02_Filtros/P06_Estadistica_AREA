var param = { 
    regionGlacier: 2061,  //Region de Clasificacion
    pais: 'BOLIVIA', 
    year: 2015,  // Solo visualizacion
    //ciclo: 'ciclo-1',
    version_input: 7,
};


var dirinput = "projects/mapbiomas-raisg/TRANSVERSALES/GLACIAR_3/clasificacion-ft";
var dirout  =   "projects/mapbiomas-raisg/TRANSVERSALES/GLACIAR_3/clasificacion-ft";
var AssetMosaic='projects/mapbiomas-raisg/MOSAICOS/workspace-c3-v2'

var AssetRegions = 'projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/clasificacion-regiones-glacier-3';
var AssetRegionsRaster = 'projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/clasificacion-regiones-glacier-3';

var prefixo_out = param.pais+ '-' + param.regionGlacier + '-' + param.version_input

var region = ee.FeatureCollection(AssetRegions).filterMetadata('id_regionC', 'equals', param.regionGlacier)
var regionRaster = ee.Image(AssetRegionsRaster).eq(param.regionGlacier).selfMask()

var palettes = require('users/mapbiomas/modules:Palettes.js');
var vis = {
    'min': 0,
    'max': 34,
    'palette': palettes.get('classification2')
};

var mosaicRegion = param.regionGlacier.toString().slice(0, 3);
var mosaic = ee.ImageCollection(AssetMosaic)
            .filterMetadata('region_code', 'equals', mosaicRegion)
            .select(['swir1_median', 'nir_median', 'red_median'])
            .filterMetadata('year', 'equals', param.year);
            
            
var class4FT = ee.ImageCollection(dirinput)
                      .filterMetadata('code_region', 'equals', param.regionGlacier)
                      .filterMetadata('version', 'equals', param.version_input)
                      .first()
print(class4FT)


  /**
 * Función para generar las estadísticas de cobertura por año y clase
 */
function getAreas(image, region) {

  var pixelArea = ee.Image.pixelArea();
  
  var reducer = {
    reducer: ee.Reducer.sum(),
    geometry: region.geometry(),
    scale: 30,
    maxPixels: 1e13
  };
  
  var bandNames = image.bandNames();
  
  //var classIds = ee.List.sequence(0, 34);
  var classIds = ee.List([27,34]);

  
  bandNames.evaluate( function(bands, error) {
    
    if(error) print(error.message);
    
    var yearsAreas = [];
  
  
    bands.forEach(function(band) {
    
      var year = ee.String(band).split('_').get(1),
          yearImage = image.select([band]);
  
      
      // Calcular áreas para cada clase cobertura
      var covers = classIds.map(function(classId) {
  
        classId = ee.Number(classId).int8();
      
        var yearCoverImage = yearImage.eq(classId),
            coverArea = yearCoverImage.multiply(pixelArea).divide(1e6);
        
        return coverArea.reduceRegion(reducer).get(band);
  
      }).add(year);
  
    
      // Generar la lista de keys para el diccionario
      var keys = classIds.map(function(item) {
  
        item = ee.Number(item).int8();
        
        var stringItem = ee.String(item);
        
        stringItem = ee.Algorithms.If(
          item.lt(10),
          ee.String('ID0').cat(stringItem),
          ee.String('ID').cat(stringItem)
        );
        
        return ee.String(stringItem);
        
      }).add('year');
  
      
      // Crear la lista de features para cada año, sin geometrías
      var dict = ee.Dictionary.fromLists(keys, covers);
  
      yearsAreas.push( ee.Feature(null, dict) );
      
    });
    
    
    yearsAreas = ee.FeatureCollection(yearsAreas);
  
    
    Export.table.toDrive({
      collection: yearsAreas,
      description: 'ESTADISTICAS-GLACIAR-'+prefixo_out,
      fileFormat: 'CSV',
      folder: 'GLACIAR_TT'
    });
      
  });
  
}

// Generar estadísticas de cobertura
getAreas(class4FT, region)
